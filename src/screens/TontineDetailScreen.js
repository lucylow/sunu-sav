import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Alert
} from 'react-native';
import I18n from '../i18n';
import { useStore } from '../store/useStore';

export default function TontineDetailScreen({ route, navigation }) {
  const { tontine } = route.params;
  const makePayment = useStore((state) => state.makePayment);

  const handlePayNow = () => {
    // Generate a mock Lightning invoice
    const mockInvoice = 'lnbc100n1p0...'; // This would be generated by the backend
    const amount = tontine.contributionAmount;
    
    navigation.navigate('Payment', {
      invoice: mockInvoice,
      amount: amount,
      tontineId: tontine.id
    });
  };

  const calculateProgress = () => {
    const paidMembers = tontine.members.filter(m => m.hasPaid).length;
    return paidMembers / tontine.members.length;
  };

  return (
    <ScrollView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <Text style={styles.name}>{tontine.name}</Text>
        <View style={[
          styles.statusBadge,
          { backgroundColor: tontine.status === 'active' ? '#34C759' : '#8E8E93' }
        ]}>
          <Text style={styles.statusText}>
            {tontine.status === 'active' ? I18n.t('active') : tontine.status}
          </Text>
        </View>
      </View>

      {/* Progress */}
      <View style={styles.progressSection}>
        <Text style={styles.sectionTitle}>Progression du Cycle</Text>
        <View style={styles.progressContainer}>
          <View style={styles.progressBackground}>
            <View 
              style={[
                styles.progressFill,
                { width: `${calculateProgress() * 100}%` }
              ]} 
            />
          </View>
          <Text style={styles.progressText}>
            {Math.round(calculateProgress() * 100)}% complété
          </Text>
        </View>
      </View>

      {/* Details */}
      <View style={styles.detailsSection}>
        <Text style={styles.sectionTitle}>Détails</Text>
        
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>{I18n.t('contribution')}</Text>
          <Text style={styles.detailValue}>{tontine.contributionAmount} sats</Text>
        </View>
        
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>{I18n.t('current_cycle')}</Text>
          <Text style={styles.detailValue}>{tontine.currentCycle}/{tontine.totalCycles}</Text>
        </View>
        
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>{I18n.t('members')}</Text>
          <Text style={styles.detailValue}>
            {tontine.members.filter(m => m.hasPaid).length}/{tontine.members.length}
          </Text>
        </View>
      </View>

      {/* Members */}
      <View style={styles.membersSection}>
        <Text style={styles.sectionTitle}>Membres</Text>
        {tontine.members.map((member, index) => (
          <View key={member.id} style={styles.memberRow}>
            <View style={styles.memberInfo}>
              <Text style={styles.memberName}>{member.name}</Text>
              <Text style={styles.memberStatus}>
                {member.hasPaid ? '✅ Payé' : '⏳ En attente'}
              </Text>
            </View>
          </View>
        ))}
      </View>

      {/* Payment Button */}
      {tontine.status === 'active' && !tontine.userHasPaid && (
        <TouchableOpacity style={styles.payButton} onPress={handlePayNow}>
          <Text style={styles.payButtonText}>{I18n.t('pay_now')}</Text>
        </TouchableOpacity>
      )}

      {/* Info */}
      <View style={styles.infoSection}>
        <Text style={styles.infoTitle}>À propos de cette Tontine</Text>
        <Text style={styles.infoText}>
          Cette tontine utilise le réseau Lightning Bitcoin pour des paiements instantanés et sécurisés. 
          Chaque membre contribue {tontine.contributionAmount} sats par cycle, et le pot total sera distribué 
          selon l'ordre défini.
        </Text>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  name: {
    fontSize: 24,
    fontWeight: 'bold',
    flex: 1,
  },
  statusBadge: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 16,
  },
  statusText: {
    color: '#FFFFFF',
    fontSize: 14,
    fontWeight: '500',
  },
  progressSection: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 16,
  },
  progressContainer: {
    marginBottom: 8,
  },
  progressBackground: {
    height: 8,
    backgroundColor: '#F0F0F0',
    borderRadius: 4,
    marginBottom: 8,
  },
  progressFill: {
    height: 8,
    backgroundColor: '#000000',
    borderRadius: 4,
  },
  progressText: {
    fontSize: 14,
    color: '#666666',
  },
  detailsSection: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  detailRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  detailLabel: {
    fontSize: 16,
    color: '#666666',
  },
  detailValue: {
    fontSize: 16,
    fontWeight: '500',
  },
  membersSection: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  memberRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  memberInfo: {
    flex: 1,
  },
  memberName: {
    fontSize: 16,
    fontWeight: '500',
    marginBottom: 2,
  },
  memberStatus: {
    fontSize: 14,
    color: '#666666',
  },
  payButton: {
    backgroundColor: '#000000',
    margin: 20,
    padding: 18,
    borderRadius: 12,
    alignItems: 'center',
  },
  payButtonText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: '600',
  },
  infoSection: {
    padding: 20,
    backgroundColor: '#F8F8F8',
    margin: 20,
    borderRadius: 12,
  },
  infoTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 12,
  },
  infoText: {
    fontSize: 14,
    color: '#666666',
    lineHeight: 20,
  },
});
