# docker-compose.ai.yml
version: '3.8'

services:
  # Redis for job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sunusav
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/_core/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Credit Scoring Service
  ai-credit:
    build:
      context: ./services/ai-credit
      dockerfile: Dockerfile
    environment:
      - AI_INTERNAL_TOKEN=${AI_INTERNAL_TOKEN:-devtoken}
      - CREDIT_MODEL_PATH=/app/models/credit_score_model.pkl
      - PYTHONUNBUFFERED=1
    ports:
      - "8001:8001"
    volumes:
      - ./services/ai-credit/models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sunusav-network

  # AI Fraud Detection Service
  ai-fraud:
    build:
      context: ./services/ai-fraud
      dockerfile: Dockerfile
    environment:
      - AI_INTERNAL_TOKEN=${AI_INTERNAL_TOKEN:-devtoken}
      - FRAUD_MODEL_PATH=/app/models/fraud_iforest.pkl
      - PYTHONUNBUFFERED=1
    ports:
      - "8002:8002"
    volumes:
      - ./services/ai-fraud/models:/app/models
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sunusav-network

  # Main Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sunusav
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AI_CREDIT_URL=http://ai-credit:8001
      - AI_FRAUD_URL=http://ai-fraud:8002
      - AI_INTERNAL_TOKEN=${AI_INTERNAL_TOKEN:-devtoken}
      - LIGHTNING_NETWORK=testnet
    ports:
      - "3001:3001"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ai-credit:
        condition: service_healthy
      ai-fraud:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - sunusav-network

  # Credit Worker
  credit-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sunusav
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AI_CREDIT_URL=http://ai-credit:8001
      - AI_INTERNAL_TOKEN=${AI_INTERNAL_TOKEN:-devtoken}
      - LIGHTNING_NETWORK=testnet
    command: node server/workers/creditWorker.js
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ai-credit:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - sunusav-network

  # Fraud Worker
  fraud-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sunusav
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AI_FRAUD_URL=http://ai-fraud:8002
      - AI_INTERNAL_TOKEN=${AI_INTERNAL_TOKEN:-devtoken}
    command: node server/workers/fraudWorker.js
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ai-fraud:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - sunusav-network

volumes:
  postgres_data:
  redis_data:

networks:
  sunusav-network:
    driver: bridge